# EZID configuration file.  Caution: contains passwords.
#
# In an extension to Python's configuration file format, we allow an
# option to be prefixed with a deployment level in braces, e.g.,
#
#   {production}the_answer: 42
#
# If a deployment-level-specific value for an option corresponding to
# the current deployment level exists, that value is used; otherwise,
# the value for the option with no deployment level is used.
#
# This file can be dynamically reloaded by sending an empty POST
# request to the URL http://{host}/ezid/admin/reload (admin
# authentication required).

[DEFAULT]
ezid_base_url: http://n2t.net/ezid
bind_noid: [http://...]
{production}bind_noid: [http://...]
default_doi_profile: datacite
default_ark_profile: erc

[prefixes]
# Note: the TESTARK and TESTDOI prefixes are special: they must always
# be present and are available to all users.  Also, the keys below are
# not just internal to this file, they are stored and referenced
# externally as well (e.g., in LDAP).  The cdlagent key is referenced
# by module ezidadmin.
keys: TESTARK,TESTDOI,cdlark,cdldoi,cdlagent,cdlaux,cdldsc,crdp_am,dryad,escholarship,esipark,esipdoi,merritt,nasaark,nasadoi,oac,purdueark,purduedoi,ucbischool
default_keys: cdlark,cdldoi

[prefix_TESTARK]
prefix: ark:/99999/fk4
name: ARK Test
minter: http://noid.cdlib.org/nd/noidu_fk4

[prefix_TESTDOI]
prefix: doi:10.9999/
name: DOI Test
minter: http://noid.cdlib.org/nd/noidu_fk4

[prefix_cdlark]
prefix: ark:/13030/c7
name: CDL ARK
minter: http://noid.cdlib.org/nd/noidu_c7

[prefix_cdldoi]
prefix: doi:10.5060/D2
name: CDL DOI
minter: http://noid.cdlib.org/nd/noidu_d2

[prefix_cdlagent]
prefix: ark:/99166/p9
name: CDL Agent
minter: http://noid.cdlib.org/nd/noidu_p9

[prefix_cdlaux]
prefix: ark:/13030/j2
name: CDL Aux
minter: http://noid.cdlib.org/nd/noidu_j2

[prefix_cdldsc]
prefix: ark:/13030/c8
name: CDL DSC
minter: http://noid.cdlib.org/nd/noidu_c8

[prefix_crdp_am]
prefix: ark:/19153/b2
name: CRDP d'Aix-Marseille
minter: http://noid.cdlib.org/nd/noidu_b2

[prefix_dryad]
prefix: doi:10.5061/
name: Dryad
minter: http://noid.cdlib.org/nd/noidu_rd8

[prefix_escholarship]
prefix: ark:/13030/qt
name: eScholarship
minter:

[prefix_esipark]
prefix: ark:/13030/p4
name: ESIP ARK
minter: http://noid.cdlib.org/nd/noidu_p4

[prefix_esipdoi]
prefix: doi:10.5060/D4
name: ESIP DOI
minter: http://noid.cdlib.org/nd/noidu_d4

[prefix_merritt]
prefix: ark:/13030/m5
name: Merritt
minter: http://noid.cdlib.org/nd/noidu_m5

[prefix_nasaark]
prefix: ark:/13030/p5
name: NASA ARK
minter: http://noid.cdlib.org/nd/noidu_p5

[prefix_nasadoi]
prefix: doi:10.5060/D5
name: NASA DOI
minter: http://noid.cdlib.org/nd/noidu_d5

[prefix_oac]
prefix: ark:/13030/kt
name: OAC
minter:

[prefix_purdueark]
prefix: ark:/34231/c6
name: Purdue ARK
minter: http://noid.cdlib.org/nd/noidu_c6

[prefix_purduedoi]
prefix: doi:10.4231/
name: Purdue DOI
minter: http://noid.cdlib.org/nd/noidu_d3

[prefix_ucbischool]
prefix: ark:/28722/k2
name: UCB iSchool
minter: http://noid.cdlib.org/nd/noidu_ucbek

[datacite]
enabled: false
{production}enabled: true
soap_url: https://doi.tib.uni-hannover.de:8443/cocoon/regserv/datacite/webserviceinterface/
realm: DOI Registration Service
username: codata
password: DATA!123

[profiles]
# Note: the internal profile is special and must be listed first.
keys: INTERNAL,datacite,dc,erc

[profile_INTERNAL]
name: internal
display_name: internal
file: %(PROJECT_ROOT)s/profiles/internal.profile

[profile_datacite]
name: datacite
display_name: DataCite
file: %(PROJECT_ROOT)s/profiles/datacite.profile

[profile_dc]
name: dc
display_name: Dublin Core
file: %(PROJECT_ROOT)s/profiles/dc.profile

[profile_erc]
name: erc
display_name: ERC
file: %(PROJECT_ROOT)s/profiles/erc.profile

[ldap]
enabled: true
{localdev}enabled: false
server: [ldaps://...]
{localdev}server: ldaps://localhost:1636/
base_dn: ou=uc3,dc=cdlib,dc=org
user_dn_template: uid=%s,ou=People,ou=uc3,dc=cdlib,dc=org
# To clarify the following: admin_username is the username of the EZID
# administrator account, which is special to EZID but otherwise a
# regular LDAP user.  ldap_admin_dn is the (privileged) LDAP
# administrator account.
admin_username: admin
admin_password: [password]
ldap_admin_dn: cn=Directory Manager
ldap_admin_password: [password]

# The following user and group options are used only if LDAP is *not*
# enabled.  (The EZID administrator username is always determined by
# ldap.admin_username above, though.)

[users]
keys: admin,dryad,gjanee

[user_admin]
password: admin
id: ark:/99166/p9kw57h4w
group: admin

[user_dryad]
password: dryad
id: ark:/99166/p9bg2h891
group: dryad

[user_gjanee]
password: gjanee
id: ark:/99166/p92z12p14
group: cdl

[groups]
keys: admin,dryad,cdl

[group_admin]
id: ark:/99166/p9g44hq02
prefixes: *

[group_dryad]
id: ark:/99166/p96q1sg5w
prefixes: dryad

[group_cdl]
id: ark:/99166/p9z60c16v
prefixes: cdlark,cdldoi

# Logging configuration is per the Python logging.config module.  Note
# that logging is *not* reconfigured when this file is reloaded.

[loggers]
keys: root

[logger_root]
# The logging level must be at least INFO to be able to detect (and
# then manually recover from) errors that occur mid-transaction.
level: INFO
handlers: h

[handlers]
keys: h

[handler_h]
class: handlers.TimedRotatingFileHandler
args: ("%(SITE_ROOT)s/logs/transaction_log", "W6")
formatter: f

[formatters]
keys: f

[formatter_f]
format: %(asctime)s %(message)s
