# checkout latest BDB version
git checkout tags/3.1.8 -b v3.1.8-before-minter-migration

# make sure the /apps/ezid/var/minters directory and files are in place

# compare the outputs from BDB and mySQL version minters
# run the shoulder-check-minters command, to check the identifiers to be minted
# compare the outputs from BDB and mySQL version minters
python manage.py shoulder-check-minters > check-minters_bdb.out

# get the output in branch 87_Berkeley_DB_migration
git checkout 87_Berkeley_DB_migration
 
python manage.py shoulder-check-minters > check-minters_sql.out

# compare the outputs - the same minter should generate the same next ID
INFO     shoulder-check-minters - doi:10.7941/D1       OK: Preview of next ID: doi:10.7941/D1Q33B


# test a minter can be extended
# create a test minter with default mask xxx with a initial capacity of xxx identifiers, 
# create xxx+ 10 identifiers to verify the minter can be automatically extend itself

git checkout v3.1.8-before-minter-migration

python manage.py shoulder-create-ark ark:/12345/jj1 test-minter-jj1-for-migration

python manage.py shoulder-mint ark:/12345/jj1 -c 10000 > ark12345_jj1.ids.bdb

# delete shoulder etnry ark:/12345/jj1 from the shoulder table
# switch to the checkout 87_Berkeley_DB_migration branch

git checkout checkout 87_Berkeley_DB_migration

python manage.py shoulder-create-ark ark:/12345/jj1 test-minter-jj1-for-migration

python manage.py shoulder-mint ark:/12345/jj1 -c 10000 > ark12345_jj1_sql.ids 



