[flake8]
# Black wraps at 88, but that's not always possible, so we set the limit a bit higher
# here.
max-line-length = 100
# Ignore:
# E111 indentation is not a multiple of four
# E114 indentation is not a multiple of four (comment)
# E121 continuation line under-indented for hanging indent
# E122 continuation line missing indentation or outdented
# E125 continuation line with same indent as next logical line
# E126 continuation line over-indented for hanging indent
# E127
# E131 continuation line unaligned for hanging indent
# E261 at least two spaces before inline comment
# E265 block comment should start with '# '
# E266 too many leading '#' for block comment - removing this because it triggers on script that is commented out
ignore = E111,E114,E121,E122,E125,E126,E127,E131,E261,E265,E266

[pytest]
# -ra: Show reason for skipped tests and additional test output summary
addopts = --capture=sys -ra
testpaths = ./tests
python_files = test_*.py
norecursedirs = test_docs
# pytest-django
DJANGO_SETTINGS_MODULE = settings.localdev

# Set up logging for unit tests. We use a format that does not include timestamps or
# other context that changes over time, making it easy to check captured log sections
# with the sample system.
#
# As of early 2020, pytest does not support the modern format string types that are
# supported by the logging module.
#
# Fields can be forced to a fixed width with %(field)X.Xs, where X is the number of
# characters, but using it on the levelname breaks colorization for the level.
log_level = DEBUG
log_format = %(name)s %(levelname)-8s %(message)s
;log_format = %(module)-12s %(levelname)-8s %(message)s
log_date_format = ""

log_cli_level = DEBUG
log_cli_format = %(name)s %(levelname)-8s %(message)s
;log_cli_format = %(module)-12s %(levelname)-8s %(message)s
log_cli_date_format = ""

# Ignore test folders starting with underscore
ignore-glob = "*/_test*"

# Prevent printing double tracebacks. Tracebacks are printed by custom traceback
# formatter, called from d1_python.conftest.pytest_runtest_makereport().
;tb=no

#usedevelop = True
