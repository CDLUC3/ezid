---

- name: update ~/.profile.d/pyenv
  blockinfile:
    path: "{{ansible_env.HOME}}/.profile.d/ezid"
    create: yes
    owner: "{{user}}"
    group: "{{group}}"
    mode: "0644"
    block: |
      #
      # pyenv setup
      #
      if [ -d {{ pyenv_root }} ]; then
        export PYENV_ROOT={{ pyenv_root }}
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
      fi
      #
      # ezid config
      #
      export DJANGO_SETTINGS_MODULE=settings.{{ deployment_level }}

# from https://galaxy.ansible.com/suzuki-shunsuke/pyenv-module
- name: pyenv install
  pyenv:
    version: "{{ item.python_version }}"
    pyenv_root: "{{ pyenv_root }}"
  environment:
    CONFIGURE_OPTS: "--enable-shared"
    CFLAGS: "-O2"
  loop: "{{ virtual_environments }}"
  when: not item.ensure is defined or item.ensure == 'present'

- name: pyenv unistall if ensure => absent
  pyenv:
    subcommand: uninstall
    version: "{{ item.python_version }}"
    pyenv_root: "{{ pyenv_root }}"
    #force: yes
  loop: "{{ virtual_environments }}"
  when: item.ensure is defined and item.ensure == 'absent'


- name: pyenv virtualenv
  pyenv:
    subcommand: virtualenv
    pyenv_root: "{{ pyenv_root }}"
    version: "{{ item.python_version }}"
    virtualenv_name: "{{ item.pyenv_name }}"
    force: yes
  loop: "{{ virtual_environments }}"
  when: not item.ensure is defined or item.ensure == 'present'


- name: pyenv global
  pyenv:
    subcommand: global
    versions:
    - "{{ pyenv_global }}"
    pyenv_root: "{{ pyenv_root }}"

- name: install python packages on the virtualenv
  pip:
    name: ['mod_wsgi']
    executable: "{{ pyenv_root }}/versions/{{ item.pyenv_name }}/bin/pip"
  loop: "{{ virtual_environments }}"
