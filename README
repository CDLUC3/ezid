What is this thing?
===================

EZID is a Django web application that can be run under Django's
built-in development server or under Apache with the mod_wsgi
extension.

Prerequisites
=============

Fundamentally, EZID requires Django <http://www.djangoproject.com/>
(version 1.6 or later), which in turn requires Python
<http://www.python.org/> (version 2.7 or later) and a relational
database of some kind (SQLite <http://www.sqlite.org/> is just fine).
lxml <http://lxml.de/> is required for processing XML.  Running under
Apache requires Apache <http://httpd.apache.org/>, of course, and
mod_wsgi <http://code.google.com/p/modwsgi/>.  To work with mod_wsgi,
Python will have to have been compiled with shared object support.
OpenSSL <http://www.openssl.org/> is needed to communicate with
DataCite and possibly with LDAP.  If LDAP authentication is used, then
OpenLDAP <http://www.openldap.org/> and python-ldap
<http://www.python-ldap.org/> are required.

Those are the core prerequisites for running EZID standalone.  But
EZID is of little value unless there are some other, external servers
running: a Noid <http://wiki.ucop.edu/display/Curation/NOID> "egg"
server for storing metadata; additional Noid "nog" servers for minting
identifiers; a shoulder server (optional); DataCite services for
creating DOI identifiers; and an LDAP server, if LDAP authentication
is used.

General layout and configuration
================================

Whether it is run under the built-in development server or under
Apache, EZID assumes that it is embedded in the following directory
layout:

    .../SITE_ROOT/
        PROJECT_ROOT/
            (this software distribution:)
            LDAP
            LOCALIZATION
            NOTES
            README
            apache/
            code/
            doc/
            etc/
            profiles/
            settings/
            static/
            templates/
                info/ (separate distribution)
            tools/
            ui_tags/
            xsd/
        db/
            alert_message
            django.sqlite3
            search.sqlite3
            secret_key
            shoulders_cache.txt
            stats
            store.sqlite3
        logs/
            transaction_log

The names of the SITE_ROOT and PROJECT_ROOT directories are arbitrary
(EZID automatically detects what they are), but for the remainder of
this document we'll assume that they are literally those names.

EZID requires certain static HTML files to be present in the
.../SITE_ROOT/PROJECT_ROOT/templates/info directory.  These files are
provided by a separate Mercurial repository.

EZID requires one environment variable, DJANGO_SETTINGS_MODULE, that
indicates the deployment level.  Possible values:

    settings.localdev
    settings.remotedev
    settings.development
    settings.staging
    settings.workflow
    settings.production

See the corresponding modules in the settings directory for the
effects the deployment level has.  In addition, the deployment level
is used to define deployment-level-specific values for options in
settings/ezid.conf and settings/ezid.conf.shadow, as in:

    [datacite]
    enabled: false
    {production}enabled: true

Running under Django
====================

When running EZID under Django's built-in server it will probably be
necessary to set the PYTHONPATH like so:

    setenv PYTHONPATH .../SITE_ROOT/PROJECT_ROOT

The combination of the PYTHONPATH and DJANGO_SETTINGS_MODULE
environment variables determines the location of the Django
application.

To create the initial databases, assuming the above environment
variables have been set:

    django-admin.py syncdb
    sqlite3 .../SITE_ROOT/db/store.sqlite3
      < .../SITE_ROOT/PROJECT_ROOT/etc/store-schema.sql
    sqlite3 .../SITE_ROOT/db/search.sqlite3
      < .../SITE_ROOT/PROJECT_ROOT/etc/search-schema.sql

To run the built-in server:

    django-admin.py runserver

The server is hosted at http://localhost:8000/.

Running under Apache
====================

To run EZID under Apache and mod_wsgi, only the DJANGO_SETTINGS_MODULE
environment variable need be set.  Five sets of directives are
required in Apache's httpd.conf.  The following assume that EZID is
hosted at http://{host}/.

1. Load mod_wsgi.

    LoadModule wsgi_module path/to/mod_wsgi.so

2. Tell mod_wsgi to run EZID as a single, separate, multithreaded
process.  (Actually, this directive applies to all mod_wsgi
applications within the same server or virtual host.)  The name is
arbitrary.

    WSGIDaemonProcess site-1

3. Map EZID URLs to mod_wsgi+Django.

    WSGIScriptAlias / /path/to/SITE_ROOT/PROJECT_ROOT/apache/django.wsgi

4. Add the following directives.  If SSL is used to protect the login
page, the WSGIApplicationGroup directive is needed to avoid creating
two, parallel instances of the Python interpreter, one for HTTP and
one for HTTPS.  (Strangely, though, while this directive has the
desired effect, it does not need to be mentioned anywhere in Apache's
SSL configuration.  In fact, nothing EZID-related needs mentioning in
the SSL configuration.)  The WSGIPassAuthorization directive is needed
to pass through HTTP Basic authentication credentials (otherwise, they
get swallowed).

    <Directory /path/to/SITE_ROOT/PROJECT_ROOT/apache>
    Order Allow,Deny
    Allow from all
    WSGIApplicationGroup %{GLOBAL}
    WSGIProcessGroup site-1
    WSGIPassAuthorization on
    </Directory>

For somewhat mysterious reasons the application group *must* be
"%{GLOBAL}" and not an arbitrary name such as "ezid".  This is because
lxml is incompatible with mod_wsgi's use of Python sub-interpreters
(even though EZID is being run as a separate daemon process).

5. Add an alias so that static files are served by Apache, not Django.

    Alias /static /path/to/SITE_ROOT/PROJECT_ROOT/static

    <Directory /path/to/SITE_ROOT/PROJECT_ROOT/static>
    Order Allow,Deny
    Allow from all
    </Directory>
