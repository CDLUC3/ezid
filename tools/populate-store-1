#! /usr/bin/env python

# Performs an initial population of the store database from a noid
# bind database.  The general procedure for building and installing
# the store database is:
#
#    SR=.../SITE_ROOT
#    PR=$SR/PROJECT_ROOT
#
#    sqlite3 NEWDB < $PR/etc/store-schema.sql
#    $PR/tools/dump -rz .../noid.bdb > DUMP
#    $PR/tools/populate-store-1 DUMP NEWDB
#    sqlite3 NEWDB analyze
#    (stop server)
#    mv NEWDB $SR/db/store.sqlite3
#    (start server)
#    (deal with any fixups using populate-store-2)
#
# This script requires several EZID modules.  The PYTHONPATH
# environment variable must include the .../SITE_ROOT/PROJECT_ROOT
# directory; if it doesn't, we attempt to dynamically locate it and
# add it.  The DJANGO_SETTINGS_MODULE environment variable must be
# set.
#
# Greg Janee <gjanee@ucop.edu>
# February 2013

import gzip
import os.path
import sys

# The following must precede any EZID module imports:
execfile(os.path.join(os.path.split(os.path.abspath(__file__))[0],
  "offline.py"))

import store
import util

if len(sys.argv) != 3:
  sys.stderr.write("usage: populate-store-1 dumpfile databasefile\n")
  sys.exit(1)

store.setDatabase(sys.argv[2])

for l in gzip.GzipFile(filename=sys.argv[1], mode="r"):
  lv = l[:-1].split(" ")
  id = lv[0]
  record = {}
  for i in range(1, len(lv), 2):
    v = util.decode(lv[i+1]).strip()
    if v != "": record[util.decode(lv[i])] = v
  store.insert(id, record, updateUpdateQueue=False)
